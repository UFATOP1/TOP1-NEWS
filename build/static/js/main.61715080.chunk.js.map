{"version":3,"sources":["components/Header/logo.png","api/index.ts","store/GameProvider.tsx","components/Header/styles.ts","components/Header/index.tsx","layouts/MainLayout.tsx","components/Loader/styles.ts","components/Loader/index.tsx","components/MatchItem/styles.ts","components/MatchItem/index.tsx","components/MatchList/index.tsx","pages/Index.tsx","components/MatchFull/styles.ts","components/MatchFull/index.tsx","pages/Detail.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["client","axios","create","baseURL","GameContext","createContext","games","loading","setGames","selectGameByID","filterGamesByText","withGame","Component","props","Consumer","store","GameProvider","children","useState","setLoading","useEffect","apiClient","get","then","data","catch","err","JSON","stringify","Provider","value","slug","id","parseInt","text","filter","g","title","includes","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","Header","searchText","setSearchText","classes","className","AppBar","Toolbar","Typography","variant","noWrap","Link","component","RouterLink","to","src","companyLogo","alt","Button","size","onClick","window","open","onSubmit","e","preventDefault","InputBase","placeholder","input","inputProps","onChange","target","MainLayout","top","left","Loader","CircularProgress","marginTop","media","MatchItem","thumbnail","date","name","competition","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","format","CardActions","MatchList","Container","Grid","container","justify","map","game","i","item","sm","md","Index","marginBottom","video","MatchFull","dangerouslySetInnerHTML","__html","videos","embed","Detail","useRouteMatch","params","App","history","createBrowserHistory","exact","path","Boolean","location","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.61715080.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.657be77a.png\";","import axios, { AxiosInstance } from \"axios\";\n\nconst client: AxiosInstance = axios.create({\n  baseURL: \"https://www.scorebat.com/video-api/v1/\",\n});\n\nexport default client;\n","import React, { FC, createContext, useState, useEffect } from \"react\";\n\nimport apiClient from \"../api\";\n\nimport IGame from \"../types/Game\";\n\nexport interface IGameState {\n  games: IGame[];\n  loading: boolean;\n  setGames: React.Dispatch<React.SetStateAction<IGame[]>>;\n  selectGameByID: (slug: string) => IGame;\n  filterGamesByText: (text: string) => void;\n}\n\nexport const GameContext = createContext<IGameState>({\n  games: [],\n  loading: true,\n  setGames: () => {},\n  selectGameByID: () => {\n    return {} as IGame;\n  },\n  filterGamesByText: () => {},\n});\n\nconst GameProvider: FC = ({ children }) => {\n  const [games, setGames] = useState<IGame[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const selectGameByID = (slug: string): IGame => {\n    const id = parseInt(slug);\n    return games[id];\n  };\n\n  const filterGamesByText = (text: string): void =>\n    setGames(games.filter((g) => g.title.includes(text)));\n\n  useEffect(() => {\n    apiClient\n      .get(\"/\")\n      .then(({ data }) => {\n        setGames(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        return <div>{JSON.stringify(err, null, 2)}</div>;\n      });\n  }, []);\n\n  return (\n    <GameContext.Provider\n      value={{ games, loading, setGames, selectGameByID, filterGamesByText }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const withGame = (Component: any) => (props: any) => (\n  <GameContext.Consumer>\n    {(store) => <Component {...props} {...store} />}\n  </GameContext.Consumer>\n);\n\nexport default GameProvider;\n","import {\n  createStyles,\n  fade,\n  Theme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      //vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n  })\n);\n\nexport default useStyles;\n","import React, { FC, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport companyLogo from './logo.png';\nimport {\n  AppBar,\n  Link,\n  Toolbar,\n  Typography,\n  Button,\n  InputBase,\n} from \"@material-ui/core\";\n//import SportsSoccerIcon from \"@material-ui/icons/SportsSoccer\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n//import { View, Image, StyleSheet } from 'react';\n\nimport { withGame, IGameState } from \"../../store/GameProvider\";\n\n\nimport useStyles from \"./styles\";\n\n\ninterface IProps extends IGameState {\n  title: string;\n}\n\nconst Header: FC<IProps> = ({ title, filterGamesByText }) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const classes = useStyles();\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => setSearchText(e.target.value);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    filterGamesByText(searchText);\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <Link component={RouterLink} to=\"/\" color=\"primary\">\n            <img src={companyLogo} width=\"50px\" alt=\"UFATOP1 logo\"/> :: {title}\n            </Link>\n          </Typography>\n          <div>\n         <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={()=> window.open(\"someLink\", \"#\")}>สาวไทย น่ารัก</Button>\n          </div>\n          <form className={classes.search} onSubmit={handleSubmit}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"ค้นหา highlight…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={handleChange}\n              value={searchText}\n            />\n          </form>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withGame((props: IProps) => <Header {...props} />);\n","import React, { FC } from \"react\";\n\nimport Header from \"../components/Header\";\n\nconst MainLayout: FC = ({ children }) => (\n  <>\n    <Header title=\" TOP1 Highlight\" />\n    {children}\n  </>\n);\n\nexport default MainLayout;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"absolute\",\n    top: \"50vh\",\n    left: \"50vw\",\n  },\n});\n\nexport default useStyles;\n","import React, { FC } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport useStyles from \"./styles\";\n\nconst Loader: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"16px\",\n    \n    width: 345,\n    height: 330,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default useStyles;\n","import React, { FC } from \"react\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nimport IGame from \"../../types/Game\";\nimport useStyles from \"./styles\";\n\nconst MatchItem: FC<IGame> = ({\n  title,\n  id,\n  thumbnail,\n  date,\n  competition: { name },\n}) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} >\n      <CardActionArea>\n        <CardMedia className={classes.media} image={thumbnail} title={title} component={Link} to={\"/\" + id}/>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h3\">\n            {title} \n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {name}\n            <br />\n            <Moment format=\"DD MMMM YYYY - HH:mm\">{date}</Moment>\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" variant=\"outlined\" component={Link} to={\"/\" + id}>\n          ชม highlight\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default MatchItem;\n","import React, { FC } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nimport { withGame, IGameState } from \"../../store/GameProvider\";\n\nimport Loader from \"../Loader\";\nimport MatchItem from \"../MatchItem\";\n\nconst MatchList: FC<IGameState> = ({ games, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Grid container justify=\"center\" spacing={3}>\n        {games.map((game, i) => (\n          <Grid key={i} item sm={6} md={4}>\n            <MatchItem {...game} id={i} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n\nexport default withGame((props: IGameState) => <MatchList {...props} />);\n","import React, { FC } from \"react\";\n\nimport MatchList from \"../components/MatchList\";\n\nconst Index: FC = () => <MatchList />;\n\nexport default Index;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"16px\",\n    marginBottom: \"16px\",\n  },\n  video: {\n    marginTop: \"16px\",\n  },\n});\n\nexport default useStyles;\n","import React, { FC } from \"react\";\nimport Moment from \"react-moment\";\nimport { Container, Typography } from \"@material-ui/core\";\n\nimport IGame from \"../../types/Game\";\nimport useStyles from \"./styles\";\n\nconst MatchFull: FC<{ game: IGame }> = ({ game }) => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Typography gutterBottom variant=\"h5\" component=\"h3\">\n        {game.title}\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {game.competition.name}\n        <br />\n        <Moment format=\"DD MMMM YYYY - HH:mm\">{game.date}</Moment>\n      </Typography>\n\n      <div\n        className={classes.video}\n        dangerouslySetInnerHTML={{ __html: game.videos[0].embed }}\n      ></div>\n    </Container>\n  );\n};\n\nexport default MatchFull;\n","import React, { FC } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport { withGame, IGameState } from \"../store/GameProvider\";\n\nimport Loader from \"../components/Loader\";\nimport MatchFull from \"../components/MatchFull\";\n\nconst Detail: FC<IGameState> = ({ loading, selectGameByID }) => {\n  const { params } = useRouteMatch<{ slug: string }>();\n  const game = selectGameByID(params.slug);\n\n  return loading ? <Loader /> : <MatchFull game={game} />;\n};\n\nexport default withGame((props: IGameState) => <Detail {...props} />);\n","import React, { FC } from \"react\";\nimport { Switch, Router, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport MainLayout from \"./layouts/MainLayout\";\n\nimport Index from \"./pages/Index\";\nimport Detail from \"./pages/Detail\";\n\nconst App: FC = () => (\n  <Router history={createBrowserHistory()}>\n    <MainLayout>\n      <Switch>\n        <Route exact path=\"/\">\n          <Index />\n        </Route>\n\n        <Route exact path=\"/:slug\">\n          <Detail />\n        </Route>\n      </Switch>\n    </MainLayout>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GameProvider from \"./store/GameProvider\";\n\nrender(\n  <React.StrictMode>\n    <GameProvider>\n      <App />\n    </GameProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}