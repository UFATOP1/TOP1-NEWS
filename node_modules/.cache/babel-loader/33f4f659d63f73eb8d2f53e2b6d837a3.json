{"ast":null,"code":"import _objectSpread from\"/Users/macbookpro/Documents/GitHub/TOP1-NEWS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/macbookpro/Documents/GitHub/TOP1-NEWS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useState,useEffect}from\"react\";import apiClient from\"../api\";import{jsx as _jsx}from\"react/jsx-runtime\";export var GameContext=/*#__PURE__*/createContext({games:[],loading:true,setGames:function setGames(){},selectGameByID:function selectGameByID(){return{};},filterGamesByText:function filterGamesByText(){}});var GameProvider=function GameProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),games=_useState2[0],setGames=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var selectGameByID=function selectGameByID(slug){var id=parseInt(slug);return games[id];};var filterGamesByText=function filterGamesByText(text){return setGames(games.filter(function(g){return g.title.includes(text);}));};useEffect(function(){apiClient.get(\"/\").then(function(_ref2){var data=_ref2.data;setGames(data);setLoading(false);}).catch(function(err){setLoading(false);return/*#__PURE__*/_jsx(\"div\",{children:JSON.stringify(err,null,2)});});},[]);return/*#__PURE__*/_jsx(GameContext.Provider,{value:{games:games,loading:loading,setGames:setGames,selectGameByID:selectGameByID,filterGamesByText:filterGamesByText},children:children});};export var withGame=function withGame(Component){return function(props){return/*#__PURE__*/_jsx(GameContext.Consumer,{children:function children(store){return/*#__PURE__*/_jsx(Component,_objectSpread(_objectSpread({},props),store));}});};};export default GameProvider;","map":{"version":3,"sources":["/Users/macbookpro/Documents/GitHub/TOP1-NEWS/src/store/GameProvider.tsx"],"names":["React","createContext","useState","useEffect","apiClient","GameContext","games","loading","setGames","selectGameByID","filterGamesByText","GameProvider","children","setLoading","slug","id","parseInt","text","filter","g","title","includes","get","then","data","catch","err","JSON","stringify","withGame","Component","props","store"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,EAAoBC,aAApB,CAAmCC,QAAnC,CAA6CC,SAA7C,KAA8D,OAA9D,CAEA,MAAOC,CAAAA,SAAP,KAAsB,QAAtB,C,2CAYA,MAAO,IAAMC,CAAAA,WAAW,cAAGJ,aAAa,CAAa,CACnDK,KAAK,CAAE,EAD4C,CAEnDC,OAAO,CAAE,IAF0C,CAGnDC,QAAQ,CAAE,mBAAM,CAAE,CAHiC,CAInDC,cAAc,CAAE,yBAAM,CACpB,MAAO,EAAP,CACD,CANkD,CAOnDC,iBAAiB,CAAE,4BAAM,CAAE,CAPwB,CAAb,CAAjC,CAUP,GAAMC,CAAAA,YAAgB,CAAG,QAAnBA,CAAAA,YAAmB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACfV,QAAQ,CAAU,EAAV,CADO,wCAClCI,KADkC,eAC3BE,QAD2B,8BAEXN,QAAQ,CAAC,IAAD,CAFG,yCAElCK,OAFkC,eAEzBM,UAFyB,eAIzC,GAAMJ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACK,IAAD,CAAyB,CAC9C,GAAMC,CAAAA,EAAE,CAAGC,QAAQ,CAACF,IAAD,CAAnB,CACA,MAAOR,CAAAA,KAAK,CAACS,EAAD,CAAZ,CACD,CAHD,CAKA,GAAML,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACO,IAAD,QACxBT,CAAAA,QAAQ,CAACF,KAAK,CAACY,MAAN,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiBJ,IAAjB,CAAP,EAAb,CAAD,CADgB,EAA1B,CAGAd,SAAS,CAAC,UAAM,CACdC,SAAS,CACNkB,GADH,CACO,GADP,EAEGC,IAFH,CAEQ,eAAc,IAAXC,CAAAA,IAAW,OAAXA,IAAW,CAClBhB,QAAQ,CAACgB,IAAD,CAAR,CACAX,UAAU,CAAC,KAAD,CAAV,CACD,CALH,EAMGY,KANH,CAMS,SAACC,GAAD,CAAS,CACdb,UAAU,CAAC,KAAD,CAAV,CACA,mBAAO,qBAAMc,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAoB,IAApB,CAA0B,CAA1B,CAAN,EAAP,CACD,CATH,EAUD,CAXQ,CAWN,EAXM,CAAT,CAaA,mBACE,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CAAEpB,KAAK,CAALA,KAAF,CAASC,OAAO,CAAPA,OAAT,CAAkBC,QAAQ,CAARA,QAAlB,CAA4BC,cAAc,CAAdA,cAA5B,CAA4CC,iBAAiB,CAAjBA,iBAA5C,CADT,UAGGE,QAHH,EADF,CAOD,CAhCD,CAkCA,MAAO,IAAMiB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,SAAD,QAAoB,UAACC,KAAD,qBAC1C,KAAC,WAAD,CAAa,QAAb,WACG,kBAACC,KAAD,qBAAW,KAAC,SAAD,gCAAeD,KAAf,EAA0BC,KAA1B,EAAX,EADH,EAD0C,EAApB,EAAjB,CAMP,cAAerB,CAAAA,YAAf","sourcesContent":["import React, { FC, createContext, useState, useEffect } from \"react\";\n\nimport apiClient from \"../api\";\n\nimport IGame from \"../types/Game\";\n\nexport interface IGameState {\n  games: IGame[];\n  loading: boolean;\n  setGames: React.Dispatch<React.SetStateAction<IGame[]>>;\n  selectGameByID: (slug: string) => IGame;\n  filterGamesByText: (text: string) => void;\n}\n\nexport const GameContext = createContext<IGameState>({\n  games: [],\n  loading: true,\n  setGames: () => {},\n  selectGameByID: () => {\n    return {} as IGame;\n  },\n  filterGamesByText: () => {},\n});\n\nconst GameProvider: FC = ({ children }) => {\n  const [games, setGames] = useState<IGame[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const selectGameByID = (slug: string): IGame => {\n    const id = parseInt(slug);\n    return games[id];\n  };\n\n  const filterGamesByText = (text: string): void =>\n    setGames(games.filter((g) => g.title.includes(text)));\n\n  useEffect(() => {\n    apiClient\n      .get(\"/\")\n      .then(({ data }) => {\n        setGames(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        return <div>{JSON.stringify(err, null, 2)}</div>;\n      });\n  }, []);\n\n  return (\n    <GameContext.Provider\n      value={{ games, loading, setGames, selectGameByID, filterGamesByText }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const withGame = (Component: any) => (props: any) => (\n  <GameContext.Consumer>\n    {(store) => <Component {...props} {...store} />}\n  </GameContext.Consumer>\n);\n\nexport default GameProvider;\n"]},"metadata":{},"sourceType":"module"}